openapi: '3.0.3'
info:
  title: Quality Care Clinics
  version: '1.0'
servers:
  - url: https://server.example.com/api/v1
tags:
  - name: user
    description: User operations
  - name: service
    description: Service operations
  - name: doctor
    description: Doctor operations
  - name: booking
    description: Booking operations
  - name: review
    description: Review operations
  - name: branch
    description: Branch operations
  - name: banner
    description: Banner operations
  - name: setting
    description: Settings operations
  - name: notification
    description: Notification operations
  - name: vat
    description: Vat operations
  - name: loyalty
    description: Loyalty operations
  - name: service_category
    description: Service Category
  
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Register a new user
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
                national_id:
                  type: string
                phone_number:
                  type: string
                photo_url:
                  type: string
              required:
                - email
                - password
                - name
                - phone_number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      hash: 
                        type: string
                        example: "dkjansdnuqheen1oen1oeh1onep1uhbeo1ueo1i2eo1i2en1"
                        description: "The encrypted hash value that contains the OTP and user details should be send to the server via /user/verify_user to make it permanent"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Internal Server Error"
                      code:
                        type: integer
                        example: 31234
                  message:
                    type: string
                    example: "Internal Server Error"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Bad Request"
                      code:
                        type: integer
                        example: 31234
                  message:
                    type: string
                    example: "Bad Request"
  /user/verify_user:
    post:
      tags:
        - user
      summary: Verify user
      description: Verify that the phone number is correct backend will send an OTP and will send a hash value to the this endpoint should be called with OTP and that has
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                otp:
                  type: number
              required:
                - hash
                - otp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserLogin'
  /user/login_email:
    post:
      tags:
        - user
      summary: Login with email
      description: Login with email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserLogin'
  /user/login_phone:
    post:
      tags:
        - user
      summary: Login with phone number
      description: Login with phone number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                password:
                  type: string
              required:
                - phone_number
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE1OTYwNzQwNzMsImV4cCI6MTU5NjA3NzY3M30.7"
  /user/login_phone_verify:
    post:
      tags:
        - user
      summary: Verify phone number
      description: Verify phone number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                otp:
                  type: number
              required:
                - hash
                - otp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserLogin'          
  /user/upload_photo:
    post:
      security:
        - UserAuth: []
      tags:
        - user
      summary: Upload user photo
      description: Upload user photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      photo_url:
                        type: string
                        example: "https://server.example.com/api/v1/user/photo/1"
  /user/admin_login:
    post:
      tags:
        - user
      summary: Admin login
      description: Admin login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/UserLogin"
  /user/:
    put:
      tags:
        - user
      summary: Update user
      description: Update user
      security:
        - UserAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                national_id:
                  type: string
                phone_number:
                  type: string
                photo_url:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      name:
                        type: string
                      national_id:
                        type: string
                      phone_number:
                        type: string
                      photo_url:
                        type: string          
  /banner/:
    get:
      tags:
        - banner
      summary: Get all banners
      description: Get all banners
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        start_timestamp:
                          type: string
                          example: "2020-08-01T00:00:00Z"
                        end_timestamp:
                          type: string
                          example: "2020-08-01T00:00:00Z"
                        image_url_en:
                          type: string
                          example: "https://server.example.com/api/v1/banner/1"
                        image_url_ar:
                          type: string
                          example: "https://server.example.com/api/v1/banner/1"
                        link:
                          type: string
                          example: "https://server.example.com/api/v1/banner/1"
    post:
      security:
        - AdminAuth: []
      tags:
        - banner
      summary: Create a new banner
      description: Create a new banner, this API takes 2 images string, 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_timestamp:
                  type: string
                end_timestamp:
                  type: string
                image_en:
                  type: string
                image_ar:
                  type: string
                link:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      start_timestamp:
                        type: string
                        example: "2020-08-01T00:00:00Z"
                      end_timestamp:
                        type: string
                        example: "2020-08-01T00:00:00Z"
                      image_url_en:
                        type: string
                        example: "https://server.example.com/api/v1/banner/1"
                      image_url_ar:
                        type: string
                        example: "https://server.example.com/api/v1/banner/1"
                      link:
                        type: string
                        example: "https://server.example.com/api/v1/banner/1"
  /banner/upload_image:
    post:
      security:
        - AdminAuth: []
      tags:
        - banner
      summary: Upload banner image
      description: Upload banner image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      image_url: 
                        type: string
                        example: "https://server.example.com/api/v1/banner/1"
  /vat/:
    get:
      tags:
        - vat
      summary: Get VAT
      description: Get VAT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      vat:
                        type: number
                        example: 15.0
    post:
      security:
        - AdminAuth: []
      tags:
        - vat
      summary: Update VAT
      description: Update VAT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                vat:
                  type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      vat:
                        type: number
                        example: 15.0
  /loyalty/:
    get:
      tags:
        - loyalty
      summary: Get loyalty
      description: Get loyalty
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      points:
                        type: integer
                        example: 100
                      discount:
                        type: number
                        example: 10.0
    post:
      security:
        - AdminAuth: []
      tags:
        - loyalty
      summary: Update loyalty
      description: Update loyalty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: integer
                discount:
                  type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      points:
                        type: integer
                        example: 100
                      discount:
                        type: number
                        example: 10.0
  /notification:
    post:
      security:
        - AdminAuth: []
      tags:
        - notification
      summary: Send push notification
      description: Send push notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message_en:
                  type: string
                message_ar:
                  type: string
                sheduled_timestamp:
                  type: string
              required:
                - message_en
                - message_ar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      message_en:
                        type: string
                      message_ar:
                        type: string
                      sheduled_timestamp:
                        type: string
    get:
      security:
        - UserAuth: []
      tags:
        - notification
      summary: Get all notification
      description: get all notifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    message_en:
                      type: string
                    message_ar:
                      type: string
                    sheduled_timestamp:
                      type: string
  /setting:
    post:
      tags:
        - setting
      summary: update user Settings
      description: update user settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                push_notification_enabled:
                 type: boolean
                email_notification_enabled:
                 type: boolean
                sms_alert_enabled:
                 type: boolean
                preferred_languagel:
                  type: string
                  enum:
                    - en
                    - ar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      push_notification_enabled:
                        type: boolean
                      email_notification_enabled:
                        type: boolean
                      sms_alert_enabled:
                        type: boolean
                      preferred_languagel:
                          type: string
                          enum:
                            - en
                            - ar
  /review:
    post:
      tags:
        - review
      summary: Add a review
      description: Add a review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                review:
                  type: string
                booking_id:
                  type: integer
              required:
                - rating
                - comment
                - booking_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      rating:
                        type: number
                      review:
                        type: string
                      booking_id:
                        type: integer
  /review/comment:
    post:
      tags:
        - review
      summary: Add a comment to the review 
      description: Add a comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                review_id:
                  type: integer
              required:
                - comment
                - review_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      comment:
                        type: string
                      review_id:
                        type: integer
  /review/doctor/{doctor_id}:
    get:
      tags:
        - review
      summary: Get all reviews for a doctor
      description: Get all reviews for a doctor
      parameters:
        - name: doctor_id
          in: path
          required: true
          description: The doctor id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        rating:
                          type: number
                        review:
                          type: string
                        booking_id:
                          type: integer
  /review/service/{service_id}:
    get:
      tags:
        - review
      summary: Get all reviews for a service
      description: Get all reviews for a service
      parameters:
        - name: service_id
          in: path
          required: true
          description: The service id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        rating:
                          type: number
                        review:
                          type: string
                        booking_id:
                          type: integer
  /service_category:
    get:
      tags:
        - service_category
      summary: Get all services categories for a type of service
      description: Get all services categories for a type of service
      parameters:
        - name: type
          in: query
          required: true
          description: The type of service
          schema:
            type: string
            enum:
              - 'DENTIST'
              - 'DERMATOLOGIST'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        type:
                          type: string
                          enum:
                          - 'DENTIST'
                          - 'DERMATOLOGIST'
    post:
      tags:
        - service_category
      summary: Create a new service category
      description: Create a new service category for a type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name_en:
                  type: string
                name_ar:
                  type: string
                type:
                  type: string
                  enum:
                  - 'DENTIST'
                  - 'DERMATOLOGIST'
              required:
                - name_en
                - name_ar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name_en:
                        type: string
                      name_ar:
                        type: string
                      type:
                        type: string
                        enum:
                        - 'DENTIST'
                        - 'DERMATOLOGIST'
  /branch:
    get:
      tags:
        - branch
      summary: Get all branches
      description: Get all branches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        city_en:
                          type: string
                        city_ar:
                          type: string
                        lat:
                          type: number
                        lng:
                          type: number
    post:
      security:
        - AdminAuth: []
      tags:
        - branch
      summary: Create a new branch
      description: Create a new branch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name_en:
                  type: string
                name_ar:
                  type: string
                city_en:
                  type: string
                city_ar:
                  type: string
                lat:
                  type: number
                lng:
                  type: number
              required:
                - name_en
                - name_ar
                - city_en
                - city_ar
                - lat
                - lng             
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name_en:
                        type: string
                      name_ar:
                        type: string
                      city_en:
                        type: string
                      city_ar:
                        type: string
                      lat:
                        type: number
                      lng:
                        type: number
  /service:
    get:
      tags:
        - service
      summary: Get all services
      description: Get all services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        about_en:
                          type: string
                        about_ar:
                          type: string
                        actual_price:
                          type: number
                        discount_price:
                          type: number
                        maximum_booking_per_slot:
                          type: number
                        category_id:
                          type: integer
                        service_image_en_url:
                          type: string
                        service_image_ar_url:
                          type: string
    post:
      security:
        - AdminAuth: []
      tags:
        - service
      summary: Create a new service
      description: Create a new service
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name_en:
                  type: string
                name_ar:
                  type: string
                about_en:
                  type: string
                about_ar:
                  type: string
                actual_price:
                  type: number
                discount_price:
                  type: number
                maximum_booking_per_slot:
                  type: number
                category_id:
                  type: integer
                service_image_en:
                  type: string
                service_image_ar:
                  type: string
              required:
                - name_en
                - name_ar
                - about_en
                - about_ar
                - actual_price
                - discount_price
                - maximum_booking_per_slot
                - category_id
                - service_image_en
                - service_image_ar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name_en:
                        type: string
                      name_ar:
                        type: string
                      about_en:
                        type: string
                      about_ar:
                        type: string
                      actual_price:
                        type: number
                      discount_price:
                        type: number
                      maximum_booking_per_slot:
                        type: number
                      category_id:
                        type: integer
                      service_image_en_url:
                        type: string
                      service_image_ar_url:
                        type: string
    put:
      security:
        - AdminAuth: []
      tags:
        - service
      summary: Update a service
      description: Update a service
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name_en:
                  type: string
                name_ar:
                  type: string
                about_en:
                  type: string
                about_ar:
                  type: string
                actual_price:
                  type: number
                discount_price:
                  type: number
                maximum_booking_per_slot:
                  type: number
                category_id:
                  type: integer
                service_image_en:
                  type: string
                service_image_ar:
                  type: string
              required:
                - name_en
                - name_ar
                - about_en
                - about_ar
                - actual_price
                - discount_price
                - maximum_booking_per_slot
                - category_id
                - service_image_en
                - service_image_ar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name_en:
                        type: string
                      name_ar:
                        type: string
                      about_en:
                        type: string
                      about_ar:
                        type: string
                      actual_price:
                        type: number
                      discount_price:
                        type: number
                      maximum_booking_per_slot:
                        type: number
                      category_id:
                        type: integer
                      service_image_en_url:
                        type: string
                      service_image_ar_url:
                        type: string
  /service/upload_image:
    post:
      security:
        - AdminAuth: []
      tags:
        - service
      summary: Upload service image
      description: Upload service image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                        example: "https://server.example.com/api/v1/service/image/1"
  /service/category:
    get:
      tags:
        - service
      summary: Get all services for a category
      description: Get all services for a category
      parameters:
        - name: category_id
          in: path
          required: true
          description: The category id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        about_en:
                          type: string
                        about_ar:
                          type: string
                        actual_price:
                          type: number
                        discount_price:
                          type: number
                        maximum_booking_per_slot:
                          type: number
                        category_id:
                          type: integer
                        service_image_en_url:
                          type: string
                        service_image_ar_url:
                          type: string
  /service/time_slot:
    get:
      tags:
        - service
      summary: Get all time slots for a service and its availability
      description: Get all time slots for a service and its availability
      parameters:
        - name: service_id
          in: path
          required: true
          description: The service id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        start_timestamp:
                          type: string
                        end_timestamp:
                          type: string
                        service_id:
                          type: integer
                        available:
                          type: boolean
    post:
      security:
        - AdminAuth: []
      tags:
        - service
      summary: Create a new time slot
      description: Create a new time slot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_timestamp:
                  type: string
                end_timestamp:
                  type: string
                service_id:
                  type: integer
              required:
                - start_timestamp
                - end_timestamp
                - service_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      start_timestamp:
                        type: string
                      end_timestamp:
                        type: string
                      service_id:
                        type: integer
  /service/branch:
    get:
      tags:
        - service
      summary: Get all branches for a service
      description: Get all branches for a service
      parameters:
        - name: service_id
          in: path
          required: true
          description: The service id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        city_en:
                          type: string
                        city_ar:
                          type: string
                        lat:
                          type: number
                        lng:
                          type: number
    post:
      security:
        - AdminAuth: []
      tags:
        - service
      summary: Add a branch to a service
      description: Add a branch to a service
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: integer
                branch_id:
                  type: integer
              required:
                - branch_id
                - service_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      branch_id:
                        type: integer
                      service_id:
                        type: integer
  /doctor:
    get:
      tags:
        - doctor
      summary: Get all doctors
      description: Get all doctors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        session_fees:
                          type: number
                        attended_patient:
                          type: integer
                        total_experience:
                          type: integer
                        qualification:
                          type: string
                        languages:
                          type: string
                        name_en:
                          type: string
                        name_ar:
                          type: string
                        about_en:
                          type: string
                        about_ar:
                          type: string
                        photo_url:
                          type: string
    post:
      security:
        - AdminAuth: []
      tags:
        - doctor
      summary: Create a new doctor
      description: Create a new doctor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session_fees:
                  type: number
                attended_patient:
                  type: integer
                total_experience:
                  type: integer
                qualification:
                  type: string
                languages:
                  type: string
                name_en:
                  type: string
                name_ar:
                  type: string
                about_en:
                  type: string
                about_ar:
                  type: string
                photo_url:
                  type: string
              required:
                - session_fees
                - attended_patient
                - total_experience
                - qualification
                - languages
                - name_en
                - name_ar
                - about_en
                - about_ar
                - photo_url
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      session_fees:
                        type: number
                      attended_patient:
                        type: integer
                      total_experience:
                        type: integer
                      qualification:
                        type: string
                      languages:
                        type: string
                      name_en:
                        type: string
                      name_ar:
                        type: string
                      about_en:
                        type: string
                      about_ar:
                        type: string
                      photo_url:
                        type: string
  /doctor/upload_photo:
    post:
      security:
        - AdminAuth: []
      tags:
        - doctor
      summary: Upload doctor photo
      description: Upload doctor photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      photo_url:
                        type: string
                        example: "https://server.example.com/api/v1/doctor/photo/1"
  /doctor/time_slot:
    get:
      tags:
        - doctor
      summary: Get all time slots for a doctor and its availability
      description: Get all time slots for a doctor and its availability
      parameters:
        - name: doctor_id
          in: path
          required: true
          description: The doctor id
          schema:
            type: integer
        - name: date
          in: query
          required: true
          description: The date
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        start_timestamp:
                          type: string
                        end_timestamp:
                          type: string
                        doctor_id:
                          type: integer
                        available:
                          type: boolean
    post:
      security:
        - AdminAuth: []
      tags:
        - doctor
      summary: Create a new time slot
      description: Create a new time slot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_timestamp:
                  type: string
                end_timestamp:
                  type: string
                doctor_id:
                  type: integer
              required:
                - start_timestamp
                - end_timestamp
                - doctor_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      start_timestamp:
                        type: string
                      end_timestamp:
                        type: string
                      doctor_id:
                        type: integer

  /booking/doctor:
    get:
      tags:
        - booking
      summary: Get all bookings for a doctor
      description: Get all bookings for a doctor
      parameters:
        - name: doctor_id
          in: path
          required: true
          description: The doctor id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        doctor_id:
                          type: integer
                        user_id:
                          type: integer
                        time_slot_id:
                          type: integer
                        branch_id:
                          type: integer
                        status:
                          type: string
                          enum:
                            - 'PENDING'
                            - 'ACCEPTED'
                            - 'REJECTED'
                            - 'COMPLETED'
                            - 'CANCELED'
    post:
      security:
        - UserAuth: []
      tags:
        - booking
      summary: Book a doctor
      description: Book a doctor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor_id:
                  type: integer
                time_slot_id:
                  type: integer
                branch_id:
                  type: integer
              required:
                - doctor_id
                - time_slot_id
                - branch_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      doctor_id:
                        type: integer
                      user_id:
                        type: integer
                      time_slot_id:
                        type: integer
                      branch_id:
                        type: integer
                      status:
                        type: string
                        enum:
                          - 'PENDING'
                          - 'ACCEPTED'
                          - 'REJECTED'
                          - 'COMPLETED'
                          - 'CANCELED'
  /booking/service:
    get:
      tags:
        - booking
      summary: Get all bookings for a service
      description: Get all bookings for a service
      parameters:
        - name: service_id
          in: path
          required: true
          description: The service id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        service_id:
                          type: integer
                        user_id:
                          type: integer
                        time_slot_id:
                          type: integer
                        branch_id:
                          type: integer
                        status:
                          type: string
                          enum:
                            - 'PENDING'
                            - 'ACCEPTED'
                            - 'REJECTED'
                            - 'COMPLETED'
                            - 'CANCELED'
    post:
      security:
        - UserAuth: []
      tags:
        - booking
      summary: Book a service
      description: Book a service
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: integer
                time_slot_id:
                  type: integer
                branch_id:
                  type: integer
              required:
                - service_id
                - time_slot_id
                - branch_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      service_id:
                        type: integer
                      user_id:
                        type: integer
                      time_slot_id:
                        type: integer
                      branch_id:
                        type: integer
                      status:
                        type: string
                        enum:
                          - 'PENDING'
                          - 'ACCEPTED'
                          - 'REJECTED'
                          - 'COMPLETED'
                          - 'CANCELED'
components:
  securitySchemes:
    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    AdminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        national_id:
          type: string
        phone:
          type: string
        photo_url:
          type: string
        access_token:
          type: string
        refresh_token:
          type: string
      required:
        - email
        - name
        - phone_number
        - access_token
        - refresh_token
